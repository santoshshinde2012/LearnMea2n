/**step 1**/

$ npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
name: (LearnMea2n) learnmea2n
version: (1.0.0)
description: Basic steps to learn mea2n
entry point: (index.js) server.js
test command:
git repository:
keywords:
author: Santosh
license: (ISC)
About to write to /Users/webwerks/Documents/Workspace/Meanstack/LearnMea2n/package.json:

{
  "name": "learnmea2n",
  "version": "1.0.0",
  "description": "Basic steps to learn mea2n",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Santosh",
  "license": "ISC"
}


Is this ok? (yes)

$

/**step 2**/

$npm install express body-parser ejs mongojs --save

Basic Dependencies

1.express

Express is a minimal and flexible Node.js web application
framework that provides a robust set of features for web and mobile applications.

2.body-parser

Node.js body parsing middleware.
Parse incoming request bodies in a middleware before your handlers, available under the req.body property.

3.ejs

Embedded JavaScript templates

4.mongojs

A node.js module for mongodb, that emulates the official mongodb API as much as possible.
It wraps mongodb-native and is available through npm


/**step 3**/

Create files and folder in application directory


1.Create folder server , client views

   server : (For server side code in express)
           index.js
   views : (render from ejs)
           index.html

   client
          This directory contains all of the client-side files which includes the Angular2 code.

   server.js

      This file contains all of our server-side code, which implements our REST API.
      Itâ€™s written in Node.js, using the Express framework and the MongoDB Node.js driver.


    server.js

       var express = require('express'),
           path = require('path'),
           bodyParser = require('body-parser'),
           index = require('./server/index'),
           port = 8080,
           app = express();

           //view engine

           app.set('views',path.join(__dirname,'views'));
           app.set('view engine','ejs');
           app.engine('html',require('ejs').renderFile);

           //set static folder

           app.use(express.static(path.join(__dirname,'client')));

           //body parser

           app.use(bodyParser.json());
           app.use(bodyParser.urlencoded({extended:false}));

           app.use('/',index);

           app.listen(port, function(){
             console.log('server started at port '+port);
           });

  index.html

            <!DOCTYPE html>
            <html>

            <head>
                <meta charset="utf-8">
                <title>MEA2N</title>
            </head>

            <body>
                <h1>Hello MEA2N</h1>
            </body>

            </html>

index.js

          var express = require('express'),
              router = express.Router();

              router.get('/',function(req,res,next){
                res.render('index.html');
              });

              module.exports = router;
